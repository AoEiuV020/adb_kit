name: ADBKIT Publish Actions
on:
  # push:
  #   branches:
  #     - main
    # paths-ignore
  repository_dispatch:
    types:
      - api
env:
  # APP名称
  APP_NAME: ADBKIT

jobs:
  build-linux:
    runs-on: ubuntu-latest
    environment: default
    steps:

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Checkout behavior_api code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/behavior_api'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/behavior_api"

      - name: move file
        run: |
          ls ${{ github.workspace }}
          mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/instance/behavior.dart
          mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/instance/behavior.g.dart

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-linux-desktop

      - name: Building
        run: flutter build linux
      
      - name: Packaging
        run: ./scripts/build/generate_linux.sh
      
      - name: Release
        run: |
          curl --upload-file "${{ env.APP_NAME }}.deb" https://transfer.sh/${{ env.APP_NAME }}.deb

  build-mac:
    # The type of runner that the job will run on
    runs-on: macos-latest
    environment: default

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Checkout behavior_api code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/behavior_api'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/behavior_api"

      - name: move file
        run: |
          mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/instance/behavior.dart
          mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/instance/behavior.g.dart

      - name: Building
        run: |
          flutter config --enable-macos-desktop
          flutter build macos

      - name: Packaging
        run: |
          ./scripts/build/generate_mac_app.sh

      - name: Release
        run: |
          curl --upload-file ${{ env.APP_NAME }}.tar https://transfer.sh/${{ env.APP_NAME }}_macOS.tar
            
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    environment: default

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Checkout behavior_api code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/behavior_api'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/behavior_api"

      - name: move file
        run: |
          mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/instance/behavior.dart
          mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/instance/behavior.g.dart

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Building...
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --dart-define=VERSION=${{ inputs.version }} --dart-define=VERSION_CODE=${{ inputs.version_code }} -t lib/main_personal.dart

      - name: Packaging
        run: |
          .\scripts\patch_executable.bat
          Compress-Archive -Path .\build\windows\runner\Release\* -DestinationPath ${{ env.APP_NAME }}_Windows.zip

      - name: Release
        run: |
          curl --upload-file ${{ env.APP_NAME }}_Windows.zip https://transfer.sh/${{ env.APP_NAME }}_Windows.zip